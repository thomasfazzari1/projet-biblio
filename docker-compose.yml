services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"

  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - service-auth
      - service-texte
      - service-extraction
  #  - service-image
    env_file:
      - .env
    volumes:
      - ./util-json:/app/util-json

  service-texte:
    build:
      context: .
      dockerfile: ./service-texte/Dockerfile
    ports:
      - "8001:8001"
    env_file:
      - .env
    volumes:
      - ./util-json:/app/util-json

  service-extraction:
    build:
      context: .
      dockerfile: ./service-extraction/Dockerfile
    ports:
      - "8002:8002"
    env_file:
      - .env
    volumes:
      - ./util-json:/app/util-json

  #service-image:
  #  build: ./service-image
  #  ports:
  #    - "8003:8003"
  #  env_file:
  #    - .env

  service-auth:
    build: ./service-auth
    ports:
      - "8004:8004"
    depends_on:
      - db-auth
    env_file:
      - .env

  db-auth:
    build: ./db/auth
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data

  db-conte:
    build: ./db/conte
    environment:
      POSTGRES_USER: conte_user
      POSTGRES_PASSWORD: conte_password
      POSTGRES_DB: conte_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_conte_data:/var/lib/postgresql/data

volumes:
  postgres_auth_data:
  postgres_conte_data: